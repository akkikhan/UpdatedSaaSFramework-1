{
  "version": 3,
  "sources": ["../../../../../../../packages/auth-client/dist/index.js"],
  "sourcesContent": ["let tokenKey = \"tenant_token\";\nexport function setTokenStorageKey(key) {\n    tokenKey = key;\n}\nexport function getToken() {\n    try {\n        return typeof localStorage !== \"undefined\" ? localStorage.getItem(tokenKey) : null;\n    }\n    catch {\n        return null;\n    }\n}\nexport function setToken(value) {\n    try {\n        if (typeof localStorage !== \"undefined\")\n            localStorage.setItem(tokenKey, value);\n    }\n    catch { }\n}\nexport function clearToken() {\n    try {\n        if (typeof localStorage !== \"undefined\")\n            localStorage.removeItem(tokenKey);\n    }\n    catch { }\n}\n/** Start Azure AD SSO by requesting authUrl from the platform API and redirecting the browser. */\nexport async function startAzure(orgId, options) {\n    const base = (options === null || options === void 0 ? void 0 : options.baseUrl) || \"\";\n    const url = `${base}/api/auth/azure/${encodeURIComponent(orgId)}`;\n    const res = await fetch(url);\n    if (!res.ok)\n        throw new Error(`Failed to start Azure SSO: ${res.status}`);\n    const data = await res.json();\n    if (!(data === null || data === void 0 ? void 0 : data.authUrl))\n        throw new Error(\"No authUrl received\");\n    window.location.href = data.authUrl; // redirect to Microsoft\n}\n/** Handle success redirect that contains ?token=... and optional &tenant=... */\nexport function handleSuccessFromUrl() {\n    const qs = new URLSearchParams(window.location.search);\n    const t = qs.get(\"token\");\n    if (t) {\n        setToken(t);\n        // clean url\n        const path = window.location.pathname;\n        window.history.replaceState({}, document.title, path);\n        return t;\n    }\n    return null;\n}\n/** Login with local credentials (JWT). */\nexport async function loginWithPassword(params) {\n    const base = params.baseUrl || \"\";\n    const res = await fetch(`${base}/api/v2/auth/login`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n            orgId: params.orgId,\n            tenantId: params.tenantId,\n            email: params.email,\n            password: params.password,\n        }),\n    });\n    if (!res.ok)\n        throw new Error(`Login failed: ${res.status}`);\n    const data = await res.json();\n    if (data === null || data === void 0 ? void 0 : data.token)\n        setToken(data.token);\n    return data;\n}\n/** Wrapper for fetch that attaches Authorization header automatically. */\nexport async function fetchWithAuth(input, init = {}) {\n    const t = getToken();\n    const headers = new Headers(init.headers || {});\n    if (t)\n        headers.set(\"Authorization\", `Bearer ${t}`);\n    return fetch(input, { ...init, headers });\n}\nexport function logout() {\n    clearToken();\n}\n/** Refresh token using platform sliding refresh endpoint */\nexport async function refreshToken(baseUrl) {\n    const base = baseUrl || \"\";\n    const t = getToken();\n    if (!t)\n        return null;\n    const res = await fetch(`${base}/api/v2/auth/refresh`, {\n        method: \"POST\",\n        headers: { Authorization: `Bearer ${t}` },\n    });\n    if (!res.ok)\n        return null;\n    const data = await res.json();\n    if (data === null || data === void 0 ? void 0 : data.token)\n        setToken(data.token);\n    return (data === null || data === void 0 ? void 0 : data.token) || null;\n}\n/** Fetch current user's RBAC profile (roles and permissions) */\nexport async function getRbacProfile(baseUrl) {\n    const base = baseUrl || \"\";\n    const res = await fetchWithAuth(`${base}/rbac/me`);\n    if (!res.ok)\n        return null;\n    return res.json();\n}\n/** Check if current user (or given profile) has a permission */\nexport async function hasPermission(permission, profile, baseUrl) {\n    const p = profile || (await getRbacProfile(baseUrl));\n    if (!p)\n        return false;\n    return Array.isArray(p.permissions) && p.permissions.includes(permission);\n}\n"],
  "mappings": "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",
  "names": []
}
